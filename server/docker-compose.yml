version: "3.9"
services:
    rabbitmq:
        image: rabbitmq:3.11-management
        container_name: 'rabbitmq'
        ports:
            - ${WIREGUARD_IP}:5672:5672
#            - ${WIREGUARD_IP}:15672:15672
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq/
            - rabbitmq_log:/var/log/rabbitmq/
        networks:
            - rabbitmq_net

    postgres:
        image: postgres:13.3-alpine
        container_name: 'postgres'
        # ports:
            # - ${WIREGUARD_IP}:5432:5432
        volumes:
            - db:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - PGDATA=${PGDATA}
        networks:
            - rabbitmq_net

    # Start our Flask apps
    c2:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: 'c2'
        restart: always
        ports:
            - 80:80
        volumes:
            - .:/app
        depends_on:
            - rabbitmq
            - postgres
        networks:
            - rabbitmq_net
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        healthcheck:
            # Check if rabbitmq is up
            test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        command: [ "gunicorn", "app:c2_app", "--bind", "0.0.0.0:80", "--workers", "30", "--reload" ]

    operator:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: 'operator'
        working_dir: '/app'
        restart: always
        ports:
            - ${WIREGUARD_IP}:5000:5000 # For operator
        volumes:
            - .:/app
            - ../implant:/app/implant
        depends_on:
            - rabbitmq
            - postgres
        networks:
            - rabbitmq_net
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        healthcheck:
            # Check if rabbitmq is up
            test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        #command is: gunicorn "app:operator_app" --bind ${BIND}:${PORT} --workers ${WORKERS} --reload --timeout 120 --access-logfile - --error-logfile -
        command: [ "gunicorn", "app:operator_app", "--bind", "0.0.0.0:5000", "--workers", "4", "--reload", "--timeout", "120", "--access-logfile", "-", "--error-logfile", "-" ]
        

networks:
    rabbitmq_net:
        driver: bridge

volumes:
    rabbitmq_data:
    rabbitmq_log:
    db:
        driver: local
